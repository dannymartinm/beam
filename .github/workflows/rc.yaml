name: Run RC Validations
on:
  workflow_dispatch:
    inputs:
      RELEASE_VER:
        description: Beam version of current release
        required: true
        default: 2.42.0 # remove default before merging
      USER_GCS_BUCKET:
        description: Bucket to upload results
        required: false
        default: gs://rc-validation-migration-tests
      RC_NUM:
        description: RC number
        required: true
        default: "1"
env: 
  RC_TAG: "v${{github.event.inputs.RELEASE_VER}}-RC${{github.event.inputs.RC_NUM}}"
  RELEASE_VER: ${{github.event.inputs.RELEASE_VER}}    
  USER_GCP_PROJECT: apache-beam-testing
  PYTHON_RC_DOWNLOAD_URL: https://dist.apache.org/repos/dist/dev/beam
  USER_GCP_REGION: us-central1
  USER_GCP_ZONE: us-central1-a
  REPO_URL: https://repository.apache.org/content/repositories/orgapachebeam-1285
  FIXED_WINDOW_DURATION: 20
jobs:

  sql_taxi_with_dataflow:
    runs-on: [self-hosted,ubuntu-20.04]
    strategy:
      matrix: 
        py_version: [3.8]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        repository: apache/beam
        ref: v2.42.0-RC1
        

    - name: Install Kubectl 
      uses: azure/setup-kubectl@v3
    
    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{matrix.py_version}}
        cache: 'pip' # caching pip dependencies

    - name: Setup Java JDK
      uses: actions/setup-java@v3.5.1
      with:
        distribution: 'temurin'
        java-version: 11

    - name: Downloading Python Staging RC
      run: |
        echo ""
        echo "====================Starting Python Cross-language Validations==============="
  

        echo "---------------------Downloading Python Staging RC----------------------------"
        wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip
        wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip.sha512
        if [[ ! -f apache-beam-$RELEASE_VER.zip ]]; then
          { echo "Fail to download Python Staging RC files." ;exit 1; }
        fi

        echo "--------------------------Verifying Hashes------------------------------------"
        sha512sum -c apache-beam-${RELEASE_VER}.zip.sha512

        `which pip` install --upgrade pip
        `which pip` install --upgrade setuptools
        
    - name: Setting Python Environment
      run: |
        echo "--------------------------Installing Python SDK-------------------------------"
        pip install --upgrade pip setuptools wheel
        pip install apache-beam-${RELEASE_VER}.zip[gcp]

    - name: Setting Taxi Variables
      run: |
        echo "SQL_TAXI_TOPIC=${GITHUB_ACTOR}_python_validations_$(date +%m%d)_$RANDOM" >> $GITHUB_ENV
        echo "SQL_TAXI_SUBSCRIPTION=${GITHUB_ACTOR}_python_validations_$(date +%m%d)_$RANDOM"  >> $GITHUB_ENV
        echo "SQL_EXPANSION_SERVICE_JAR=${REPO_URL}/org/apache/beam/beam-sdks-java-extensions-sql-expansion-service/${RELEASE_VER}/beam-sdks-java-extensions-sql-expansion-service-${RELEASE_VER}.jar" >> $GITHUB_ENV
    - name: Creating Pub/Sub Topics
      run: |
        gcloud pubsub topics create --project=${USER_GCP_PROJECT} ${SQL_TAXI_TOPIC}
        gcloud pubsub subscriptions create --project=${USER_GCP_PROJECT} --topic=${SQL_TAXI_TOPIC} ${SQL_TAXI_SUBSCRIPTION}
    - name: XLang SQL Taxi with DataflowRunner
      run: |
        echo '***************************************************';
        echo '* Running Python XLang SQL Taxi with DataflowRunner';
        echo '***************************************************';
        timeout --preserve-status 20m python -m apache_beam.examples.sql_taxi \
        --project=${USER_GCP_PROJECT} \
        --region=${USER_GCP_REGION} \
        --runner DataflowRunner \
        --num_workers 5 \
        --output_topic projects/${USER_GCP_PROJECT}/topics/${SQL_TAXI_TOPIC} \
        --beam_services="{\":sdks:java:extensions:sql:expansion-service:shadowJar\": \"${SQL_EXPANSION_SERVICE_JAR}\"}" \
        --sdk_location apache-beam-${RELEASE_VER}.zip || true
    - name: Checking Results
      run: |
        gcloud pubsub subscriptions pull --project=${USER_GCP_PROJECT} --limit=5 ${SQL_TAXI_SUBSCRIPTION}
        gcloud pubsub subscriptions pull --project=${USER_GCP_PROJECT} --limit=5 ${SQL_TAXI_SUBSCRIPTION}
    - name: Removing Pub Sub Topic
      if: always()
      run: | 
        gcloud pubsub topics delete --project=${USER_GCP_PROJECT} ${SQL_TAXI_TOPIC}
        gcloud pubsub subscriptions delete --project=${USER_GCP_PROJECT} ${SQL_TAXI_SUBSCRIPTION}


  python_cross_validation:
    runs-on: [self-hosted,ubuntu-20.04]
    strategy:
      matrix: 
        py_version: [3.8]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        repository: apache/beam
        ref: v2.42.0-RC1
    - name: Verify ENV values
      run: |
        echo ""
        echo "====================Checking Environment & Variables================="
        echo ""
        echo "running validations on release ${{github.event.inputs.RELEASE_VER}} RC${{github.event.inputs.RC_NUM}}."
    - name: Install Kubectl 
      uses: azure/setup-kubectl@v3

    - name: Setup Java JDK
      uses: actions/setup-java@v3.5.1
      with:
        distribution: 'temurin'
        java-version: 11

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{matrix.py_version}}
        cache: 'pip' 
    ########    
    - name: install-wheel
      shell: bash
      run: pip install --upgrade pip setuptools wheel
    - name: Downloading Python Staging RC
      shell: bash
      run: |
          echo "---------------------Downloading Python Staging RC----------------------------"
          wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip
          wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip.sha512
          if [[ ! -f apache-beam-$RELEASE_VER.zip ]]; then
            { echo "Fail to download Python Staging RC files." ;exit 1; }
          fi

          echo "--------------------------Verifying Hashes------------------------------------"
          sha512sum -c apache-beam-${RELEASE_VER}.zip.sha512

          `which pip` install --upgrade pip
          `which pip` install --upgrade setuptools
    - name: Installing python SDK
      shell: bash
      run: pip install apache-beam-${RELEASE_VER}.zip[gcp]

    - name: Donwloading Python RC
      shell: bash
      run: |
        echo "---------------------Downloading Python Staging RC----------------------------"
        wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip
        wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip.sha512

    - name: Verifying Hashes
      shell: bash
      run: |
        echo "--------------------------Verifying Hashes------------------------------------"
        sha512sum -c apache-beam-${RELEASE_VER}.zip.sha512
    ########

    - name: Installing gcloud-auth-plugin
      run: sudo apt-get install google-cloud-sdk-gke-gcloud-auth-plugin
    - name: Setting Kafka Cluster Name # TODO: change to random again once the tests are finished
      run: |
        echo "KAFKA_CLUSTER_NAME=xlang-kafka-cluster-12817">> $GITHUB_ENV 
    
    - name: Getting cluster credentials
      run: gcloud container clusters get-credentials ${KAFKA_CLUSTER_NAME} --region ${USER_GCP_REGION} --project ${USER_GCP_PROJECT}
    - name: Creating Kafka Cluster
      run: |
        gcloud container clusters create --project=${USER_GCP_PROJECT} --region=${USER_GCP_REGION} --no-enable-ip-alias $KAFKA_CLUSTER_NAME
        kubectl apply -R -f .test-infra/kubernetes/kafka-cluster
    
    - name: Setting Python Environment
      run: |
        echo "--------------------------Installing Python SDK-------------------------------"
        pip install --upgrade pip setuptools wheel
        pip install apache-beam-${RELEASE_VER}.zip[gcp]
    - name: Waiting for Kafka cluster to be ready
      run: kubectl wait --for=condition=Ready pod/kafka-0 --timeout=900s
    - name: Start xlang Kafka Taxi with Dataflow Runner 
      run: |
        echo "BOOTSTRAP_SERVERS=$(kubectl get svc outside-0 -o jsonpath='{.status.loadBalancer.ingress[0].ip}'):32400" >> $GITHUB_ENV
        echo "KAFKA_TAXI_DF_DATASET=${GITHUB_ACTOR}_python_validations_$(date +%m%d)_$RANDOM" >> $GITHUB_ENV
        echo "KAFKA_EXPANSION_SERVICE_JAR=${REPO_URL}/org/apache/beam/beam-sdks-java-io-expansion-service/${RELEASE_VER}/beam-sdks-java-io-expansion-service-${RELEASE_VER}.jar" >> $GITHUB_ENV
    - name: Checking variables
      run: |
        echo $BOOTSTRAP_SERVERS
        echo $KAFKA_TAXI_DF_DATASET
        echo $KAFKA_EXPANSION_SERVICE_JAR
    - name: Creating BigQuery Dataset
      run: bq mk --project_id=${USER_GCP_PROJECT} ${KAFKA_TAXI_DF_DATASET}
    - name: Running Xlang Kafka Taxi with Dataflow Runner
      run: |
        echo '*****************************************************';
        echo '* Running Python XLang Kafka Taxi with DataflowRunner';
        echo '*****************************************************';
        echo "***************************************************************";
        timeout --preserve-status 20m python -m apache_beam.examples.kafkataxi.kafka_taxi \
        --project=${USER_GCP_PROJECT} \
        --region=${USER_GCP_REGION} \
        --topic beam-runnerv2 \
        --bootstrap_servers ${BOOTSTRAP_SERVERS} \
        --bq_dataset ${KAFKA_TAXI_DF_DATASET} \
        --runner DataflowRunner \
        --num_workers 5 \
        --temp_location=${USER_GCS_BUCKET}/temp/ \
        --with_metadata \
        --beam_services="{\"sdks:java:io:expansion-service:shadowJar\": \"${KAFKA_EXPANSION_SERVICE_JAR}\"}" \
        --sdk_location apache-beam-${RELEASE_VER}.zip || true
    - name: Checking executions results
      run: |
        bq head -n 10 ${KAFKA_TAXI_DF_DATASET}.xlang_kafka_taxi          
    - name: Remove BigQuery Dataset
      if: always()
      run: |
        bq rm -f ${KAFKA_TAXI_DF_DATASET}.xlang_kafka_taxi
        bq rm -f ${KAFKA_TAXI_DF_DATASET}
    
    - name: Delete Kafka Cluster
      if: always()
      run: gcloud container clusters delete --project=${USER_GCP_PROJECT} --region=${USER_GCP_REGION} --async -q $KAFKA_CLUSTER_NAME


  generate_shared_pubsub:
    outputs:
      name: ${{ steps.generate_pubsub_name.outputs.pubsub }}
    runs-on: [self-hosted,ubuntu-20.04]
    steps:
    - name: Sending PubSub name to env
    #TODO: Change to random once everything is working
      run: |
        echo "SHARED_PUBSUB_TOPIC=leader_board-${GITHUB_ACTOR}-python-topic-$(date +%m%d)_$RANDOM" >> $GITHUB_ENV 
    - id: generate_pubsub_name 
      run: |
        echo "::set-output name=pubsub::$SHARED_PUBSUB_TOPIC"
    - name: Creating Pub Sub Topics
      run: gcloud pubsub topics create --project=${USER_GCP_PROJECT} ${SHARED_PUBSUB_TOPIC}


  java_injector:
    runs-on: [self-hosted,ubuntu-20.04]
    needs: generate_shared_pubsub
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        repository: apache/beam
        ref: v2.42.0-RC1
    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        cache: 'pip' # caching pip dependencies
    ########    
    - name: install-wheel
      shell: bash
      run: pip install --upgrade pip setuptools wheel
    - name: Downloading Python Staging RC
      shell: bash
      run: |
          echo "---------------------Downloading Python Staging RC----------------------------"
          wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip
          wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip.sha512
          if [[ ! -f apache-beam-$RELEASE_VER.zip ]]; then
            { echo "Fail to download Python Staging RC files." ;exit 1; }
          fi

          echo "--------------------------Verifying Hashes------------------------------------"
          sha512sum -c apache-beam-${RELEASE_VER}.zip.sha512

          `which pip` install --upgrade pip
          `which pip` install --upgrade setuptools
    - name: Installing python SDK
      shell: bash
      run: pip install apache-beam-${RELEASE_VER}.zip[gcp]

    - name: Donwloading Python RC
      shell: bash
      run: |
        echo "---------------------Downloading Python Staging RC----------------------------"
        wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip
        wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip.sha512

    - name: Verifying Hashes
      shell: bash
      run: |
        echo "--------------------------Verifying Hashes------------------------------------"
        sha512sum -c apache-beam-${RELEASE_VER}.zip.sha512
    ########
    - name: Setup Maven Action
      uses: s4u/setup-maven-action@v1.2.1
      with:
        java-version: 11
    - name: Updating Settings
      run: |
        cd ~
        if [[ ! -d .m2 ]]; then
          mkdir .m2
        fi
        cd .m2
        if [[ -f ~/.m2/settings.xml ]]; then
          mv settings.xml /tmp/
        fi
        touch settings.xml
        echo "<settings>" >> settings.xml
        echo "  <profiles>" >> settings.xml
        echo "    <profile>" >> settings.xml
        echo "      <id>release-repo</id>" >> settings.xml
        echo "      <activation>" >> settings.xml
        echo "        <activeByDefault>true</activeByDefault>" >> settings.xml
        echo "      </activation>" >> settings.xml
        echo "      <repositories>" >> settings.xml
        echo "        <repository>" >> settings.xml
        echo "          <id>Release ${RELEASE_VER} RC${{github.event.inputs.RC_NUM}}</id>" >> settings.xml
        echo "          <name>Release ${RELEASE_VER} RC${{github.event.inputs.RC_NUM}}</name>" >> settings.xml
        echo "          <url>${REPO_URL}</url>" >> settings.xml
        echo "        </repository>" >> settings.xml
        echo "      </repositories>" >> settings.xml
        echo "    </profile>" >> settings.xml
        echo "  </profiles>" >> settings.xml
        echo "</settings>" >> settings.xml
        cat settings.xml
    - name: Generate Maven archetype
      run: |
        mvn archetype:generate \
        -DarchetypeGroupId=org.apache.beam \
        -DarchetypeArtifactId=beam-sdks-java-maven-archetypes-examples \
        -DarchetypeVersion=2.41.0 \
        -DgroupId=org.example \
        -DartifactId=word-count-beam \
        -Dversion="0.1" \
        -Dpackage=org.apache.beam.examples \
        -DinteractiveMode=false \
        -DarchetypeCatalog=internal
    - name: Running Pub/Sub Java injector
      run: |
        ls
        cd word-count-beam
        timeout --preserve-status 50m mvn compile exec:java -Dexec.mainClass=org.apache.beam.examples.complete.game.injector.Injector -Dexec.args="${USER_GCP_PROJECT} ${{needs.generate_shared_pubsub.outputs.name}} none" || true 
  
  

  direct_runner_leaderboard:
    runs-on: [self-hosted, ubuntu-20.04]
    strategy:
      matrix: 
        py_version: [3.8]
    needs: generate_shared_pubsub
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.py_version}}
      ########    
      - name: install-wheel
        shell: bash
        run: pip install --upgrade pip setuptools wheel
      - name: Downloading Python Staging RC
        shell: bash
        run: |
            echo "---------------------Downloading Python Staging RC----------------------------"
            wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip
            wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip.sha512
            if [[ ! -f apache-beam-$RELEASE_VER.zip ]]; then
              { echo "Fail to download Python Staging RC files." ;exit 1; }
            fi

            echo "--------------------------Verifying Hashes------------------------------------"
            sha512sum -c apache-beam-${RELEASE_VER}.zip.sha512

            `which pip` install --upgrade pip
            `which pip` install --upgrade setuptools
      - name: Installing python SDK
        shell: bash
        run: pip install apache-beam-${RELEASE_VER}.zip[gcp]

      - name: Donwloading Python RC
        shell: bash
        run: |
          echo "---------------------Downloading Python Staging RC----------------------------"
          wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip
          wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip.sha512

      - name: Verifying Hashes
        shell: bash
        run: |
          echo "--------------------------Verifying Hashes------------------------------------"
          sha512sum -c apache-beam-${RELEASE_VER}.zip.sha512
    ########
      - name: Exporting leaderboard Dataset
        run: echo "LEADERBOARD_DIRECT_DATASET=${GITHUB_ACTOR}_python_validations_$(date +%m%d)_$RANDOM" >> $GITHUB_ENV
      - name: Creating Dataset
        run: bq mk --project_id=${USER_GCP_PROJECT} ${LEADERBOARD_DIRECT_DATASET}
      - name: Starting Leaderboard with DirectRunner
        run: |
          echo '*****************************************************';
          echo '* Running Python Leaderboard with DirectRunner';
          echo '*****************************************************';
          timeout --preserve-status 5m python -m apache_beam.examples.complete.game.leader_board \
          --project=${USER_GCP_PROJECT} \
          --topic projects/${USER_GCP_PROJECT}/topics/${{needs.generate_shared_pubsub.outputs.name}} \
          --dataset ${LEADERBOARD_DIRECT_DATASET} || true
      - name: Checking results
        run: |
          bq head -n 10 ${LEADERBOARD_DIRECT_DATASET}.leader_board_users
          bq head -n 10 ${LEADERBOARD_DIRECT_DATASET}.leader_board_teams
      - name: Removing BigQuery Dataset
        if: always()
        run: | 
          bq rm -f ${LEADERBOARD_DIRECT_DATASET}.leader_board_users
          bq rm -f ${LEADERBOARD_DIRECT_DATASET}.leader_board_teams
          bq rm -f $LEADERBOARD_DIRECT_DATASET


  dataflow_runner_leaderboard:
    runs-on: [self-hosted,ubuntu-20.04]
    strategy:
      matrix:
        py_version: [3.8]
    needs: [generate_shared_pubsub]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: apache/beam
          ref: v2.42.0-RC1

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.py_version}}
      
      ########    
      - name: install-wheel
        shell: bash
        run: pip install --upgrade pip setuptools wheel
      - name: Downloading Python Staging RC
        shell: bash
        run: |
            echo "---------------------Downloading Python Staging RC----------------------------"
            wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip
            wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip.sha512
            if [[ ! -f apache-beam-$RELEASE_VER.zip ]]; then
              { echo "Fail to download Python Staging RC files." ;exit 1; }
            fi

            echo "--------------------------Verifying Hashes------------------------------------"
            sha512sum -c apache-beam-${RELEASE_VER}.zip.sha512

            `which pip` install --upgrade pip
            `which pip` install --upgrade setuptools
      - name: Installing python SDK
        shell: bash
        run: pip install apache-beam-${RELEASE_VER}.zip[gcp]

      - name: Donwloading Python RC
        shell: bash
        run: |
          echo "---------------------Downloading Python Staging RC----------------------------"
          wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip
          wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip.sha512

      - name: Verifying Hashes
        shell: bash
        run: |
          echo "--------------------------Verifying Hashes------------------------------------"
          sha512sum -c apache-beam-${RELEASE_VER}.zip.sha512
    ########
      - name: Exporting Dataflow Dataset
        run: echo "LEADERBOARD_DF_DATASET=${GITHUB_ACTOR}_python_validations_$(date +%m%d)_$RANDOM" >> $GITHUB_ENV
      - name: Creating Dataset
        run: bq mk --project_id=${USER_GCP_PROJECT} ${LEADERBOARD_DF_DATASET}
      - name: Starting Leaderboard with Dataflow
        run: |
          echo '*****************************************************';
          echo '* Running Python Leaderboard with DataflowRunner';
          echo '*****************************************************';
          timeout --preserve-status 20m python -m apache_beam.examples.complete.game.leader_board \
          --project=${USER_GCP_PROJECT} \
          --region=${USER_GCP_REGION} \
          --topic projects/${USER_GCP_PROJECT}/topics/${{needs.generate_shared_pubsub.outputs.name}} \
          --dataset ${LEADERBOARD_DF_DATASET} \
          --runner DataflowRunner \
          --temp_location=${USER_GCS_BUCKET}/temp/ \
          --sdk_location apache-beam-${RELEASE_VER}.zip || true
      - name: Checking results
        run: |
          bq head -n 10 ${LEADERBOARD_DF_DATASET}.leader_board_users
          bq head -n 10 ${LEADERBOARD_DF_DATASET}.leader_board_teams
      - name: Removing BigQuery Dataset
        if: always()
        run: | 
          bq rm -f ${LEADERBOARD_DF_DATASET}.leader_board_users
          bq rm -f ${LEADERBOARD_DF_DATASET}.leader_board_teams
          bq rm -f $LEADERBOARD_DF_DATASET
      

  direct_runner_gamestats:
    runs-on: [self-hosted,ubuntu-20.04]
    strategy:
      matrix:
        py_version: [3.8]
    needs: [generate_shared_pubsub]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.py_version}}
          cache: 'pip' # caching pip dependencies
      ########    
      - name: install-wheel
        shell: bash
        run: pip install --upgrade pip setuptools wheel
      - name: Downloading Python Staging RC
        shell: bash
        run: |
            echo "---------------------Downloading Python Staging RC----------------------------"
            wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip
            wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip.sha512
            if [[ ! -f apache-beam-$RELEASE_VER.zip ]]; then
              { echo "Fail to download Python Staging RC files." ;exit 1; }
            fi

            echo "--------------------------Verifying Hashes------------------------------------"
            sha512sum -c apache-beam-${RELEASE_VER}.zip.sha512

            `which pip` install --upgrade pip
            `which pip` install --upgrade setuptools
      - name: Installing python SDK
        shell: bash
        run: pip install apache-beam-${RELEASE_VER}.zip[gcp]

      - name: Donwloading Python RC
        shell: bash
        run: |
          echo "---------------------Downloading Python Staging RC----------------------------"
          wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip
          wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip.sha512

      - name: Verifying Hashes
        shell: bash
        run: |
          echo "--------------------------Verifying Hashes------------------------------------"
          sha512sum -c apache-beam-${RELEASE_VER}.zip.sha512
    ########
      - name: Exporting Gamestates Direct Dataset
        run: echo "GAMESTATS_DIRECT_DATASET=${GITHUB_ACTOR}_python_validations_$(date +%m%d)_$RANDOM" >> $GITHUB_ENV
      - name: Creating Dataset
        run: bq mk --project_id=${USER_GCP_PROJECT} ${GAMESTATS_DIRECT_DATASET}
      - name: Starting Gamestats with DirectRunner
        run: |
          echo '*****************************************************';
          echo '* Running GameStats with DirectRunner';
          echo '*****************************************************';
          timeout --preserve-status 40m python -m apache_beam.examples.complete.game.game_stats \
          --project=${USER_GCP_PROJECT} \
          --topic projects/${USER_GCP_PROJECT}/topics/${{needs.generate_shared_pubsub.outputs.name}} \
          --dataset ${GAMESTATS_DIRECT_DATASET} \
          --fixed_window_duration ${FIXED_WINDOW_DURATION} || true
      - name: Checking Results
        run: |
          bq head -n 10 ${GAMESTATS_DIRECT_DATASET}.game_stats_teams
          bq head -n 10 ${GAMESTATS_DIRECT_DATASET}.game_stats_sessions
      - name: Removing BigQuery Dataset
        if: always()
        run: | 
          bq rm -f ${GAMESTATS_DIRECT_DATASET}.game_stats_sessions
          bq rm -f ${GAMESTATS_DIRECT_DATASET}.game_stats_teams
          bq rm -f $GAMESTATS_DIRECT_DATASET


  dataflow_runner_gamestats:
    runs-on: [self-hosted,ubuntu-20.04]
    strategy:
      matrix:
        py_version: [3.8]
    needs: [generate_shared_pubsub]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.py_version}}
      ########    
      - name: install-wheel
        shell: bash
        run: pip install --upgrade pip setuptools wheel
      - name: Downloading Python Staging RC
        shell: bash
        run: |
            echo "---------------------Downloading Python Staging RC----------------------------"
            wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip
            wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip.sha512
            if [[ ! -f apache-beam-$RELEASE_VER.zip ]]; then
              { echo "Fail to download Python Staging RC files." ;exit 1; }
            fi

            echo "--------------------------Verifying Hashes------------------------------------"
            sha512sum -c apache-beam-${RELEASE_VER}.zip.sha512

            `which pip` install --upgrade pip
            `which pip` install --upgrade setuptools
      - name: Installing python SDK
        shell: bash
        run: pip install apache-beam-${RELEASE_VER}.zip[gcp]

      - name: Donwloading Python RC
        shell: bash
        run: |
          echo "---------------------Downloading Python Staging RC----------------------------"
          wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip
          wget ${PYTHON_RC_DOWNLOAD_URL}/${RELEASE_VER}/python/apache-beam-${RELEASE_VER}.zip.sha512

      - name: Verifying Hashes
        shell: bash
        run: |
          echo "--------------------------Verifying Hashes------------------------------------"
          sha512sum -c apache-beam-${RELEASE_VER}.zip.sha512
      ########
      - name: Exporting Gamestates Direct Dataset
        run: echo "GAMESTATS_DF_DATASET=${GITHUB_ACTOR}_python_validations_$(date +%m%d)_$RANDOM" >> $GITHUB_ENV
      - name: Creating Dataset
        run: bq mk --project_id=${USER_GCP_PROJECT} ${GAMESTATS_DF_DATASET}
      - name: Starting Gamestats with DirectRunner
        run: |
          echo '*****************************************************';
          echo '* Running GameStats with DataflowRunner';
          echo '*****************************************************';
          timeout --preserve-status 45m python -m apache_beam.examples.complete.game.game_stats \
          --project=${USER_GCP_PROJECT} \
          --region=${USER_GCP_REGION} \
          --topic projects/${USER_GCP_PROJECT}/topics/${{needs.generate_shared_pubsub.outputs.name}} \
          --dataset ${GAMESTATS_DF_DATASET} \
          --runner DataflowRunner \
          --temp_location=${USER_GCS_BUCKET}/temp/ \
          --sdk_location apache-beam-${RELEASE_VER}.zip \
          --fixed_window_duration ${FIXED_WINDOW_DURATION} || true
      - name: Checking Results
        run: |
          bq head -n 10 ${GAMESTATS_DF_DATASET}.game_stats_teams
          bq head -n 10 ${GAMESTATS_DF_DATASET}.game_stats_sessions
      - name: Removing BigQuery Dataset
        if: always()
        run: |
          bq rm -f ${GAMESTATS_DF_DATASET}.game_stats_teams
          bq rm -f ${GAMESTATS_DF_DATASET}.game_stats_sessions 
          bq rm -f $GAMESTATS_DF_DATASET
  
  remove_shared_pubsub:
    runs-on: [self-hosted,ubuntu-20.04]
    needs: [generate_shared_pubsub, dataflow_runner_leaderboard, direct_runner_leaderboard, direct_runner_gamestats, dataflow_runner_gamestats ]
    if: always()
    steps:
      - name: Deleting Shared Pub Sub
        run: gcloud pubsub topics delete --project=${USER_GCP_PROJECT}  ${{needs.generate_shared_pubsub.outputs.name}}
