# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# To learn more about GitHub Actions in Apache Beam check the CI.md

name: Python tests

on:
  schedule:
    - cron: '10 2 * * *'
  push:
    branches: ['master', 'release-*']
    tags: 'v*'
  pull_request:
    branches: ['master', 'release-*']
    tags: 'v*'
    paths: ['sdks/python/**', 'model/**']
  workflow_dispatch:
    inputs:
      runDataflow:
        description: 'Type "true" if you want to run Dataflow tests (GCP variables must be configured, check CI.md)'
        default: false


jobs:
  python_unit_tests:
    name: 'Python Unit Tests'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [self-hosted,windows]
        params: [
          {"py_ver": "3.6", "tox_env": "py36"},
          {"py_ver": "3.7", "tox_env": "py37"},
          {"py_ver": "3.8", "tox_env": "py38"},
        ]
        exclude:
          # TODO remove exclusion after issue with protobuf is solved
          # https://github.com/protocolbuffers/protobuf/issues/7765
          - os: [self-hosted,windows]
            params: {"py_ver": "3.8", "tox_env": "py38"}
    steps:
      - name: Clean GitHub workspace
        if: contains(matrix.os, 'ubuntu-20.04')
        run: if [ -d "$GITHUB_WORKSPACE" ]; then sudo rm -rf $GITHUB_WORKSPACE/* ; fi
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.params.py_ver }}
      - name: Get build dependencies
        working-directory: ./sdks/python
        run: pip install -r build-requirements.txt
      - name: Install tox
        run: pip install tox
      - name: Run tests basic unix
        if: contains(matrix.os, 'ubuntu-20.04') || startsWith(matrix.os, 'macos')
        working-directory: ./sdks/python
        run: tox -c tox.ini -e ${{ matrix.params.tox_env }}
        # Commented by the moment to run memory&cpu resources.
      - name: Run tests basic windows
        if: startsWith(matrix.os, 'windows')
        working-directory: ./sdks/python
        run: tox -c tox.ini -e ${{ matrix.params.tox_env }}-win
      - name: Upload test logs
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: pytest-${{matrix.os}}-${{matrix.params.py_ver}}
          path: sdks/python/pytest**.xml


