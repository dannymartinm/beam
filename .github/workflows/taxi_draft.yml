name: Taxi Draft Validation
on:
  workflow_dispatch:
    inputs:
      RELEASE_VER:
        description: Beam version of current release
        required: true
        default: 2.42.0 # remove default before merging
      USER_GCS_BUCKET:
        description: Bucket to upload results
        required: false
        default: gs://rc-validation-migration-tests
      RC_NUM:
        description: RC number
        required: true
        default: "1"
env: # This should be a set of github secrets    
  USER_GCP_PROJECT: apache-beam-testing
  USER_GCP_REGION: us-central1
  USER_GCP_ZONE: us-central1-a
  REPO_URL: https://repository.apache.org/content/repositories/orgapachebeam-1284
jobs:
  sql_taxi_with_dataflow:
    runs-on: [self-hosted,ubuntu-20.04]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Kubectl 
      uses: azure/setup-kubectl@v3

    - name: Setup Java JDK
      uses: actions/setup-java@v3.5.1
      with:
        distribution: 'temurin'
        java-version: 11

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        cache: 'pip' # caching pip dependencies
    
    - name: Setting python env
      uses: ./.github/actions/common-rc-validation

    - name: Installing gcloud-auth-plugin
      run: sudo apt-get install google-cloud-sdk-gke-gcloud-auth-plugin


    - name: Setting Taxi Variables
      run: |
        echo "SQL_TAXI_TOPIC=${GITHUB_ACTOR}_python_validations_$(date +%m%d)_$RANDOM" >> $GITHUB_ENV
        echo "SQL_TAXI_SUBSCRIPTION=${GITHUB_ACTOR}_python_validations_$(date +%m%d)_$RANDOM"  >> $GITHUB_ENV
        echo "SQL_EXPANSION_SERVICE_JAR=${REPO_URL}/org/apache/beam/beam-sdks-java-extensions-sql-expansion-service/${RELEASE_VER}/beam-sdks-java-extensions-sql-expansion-service-${RELEASE_VER}.jar" >> $GITHUB_ENV
    - name: Creating Pub/Sub Topics
      run: |
        gcloud pubsub topics create --project=${USER_GCP_PROJECT} ${SQL_TAXI_TOPIC}
        gcloud pubsub subscriptions create --project=${USER_GCP_PROJECT} --topic=${SQL_TAXI_TOPIC} ${SQL_TAXI_SUBSCRIPTION}
    - name: XLang SQL Taxi with DataflowRunner
      run: |
        echo '***************************************************';
        echo '* Running Python XLang SQL Taxi with DataflowRunner';
        echo '***************************************************';
        timeout --preserve-status 20m python -m apache_beam.examples.sql_taxi \
        --project=${USER_GCP_PROJECT} \
        --region=${USER_GCP_REGION} \
        --runner DataflowRunner \
        --num_workers 5 \
        --temp_location=${USER_GCS_BUCKET}/temp/ \
        --output_topic projects/${USER_GCP_PROJECT}/topics/${SQL_TAXI_TOPIC} \
        --beam_services="{\":sdks:java:extensions:sql:expansion-service:shadowJar\": \"${SQL_EXPANSION_SERVICE_JAR}\"}" \
        --sdk_location apache-beam-${RELEASE_VER}.zip || true
    - name: Checking results
      run: |
        gcloud pubsub subscriptions pull --project=${USER_GCP_PROJECT} --limit=5 ${SQL_TAXI_SUBSCRIPTION}
    - name: Removing Pub/Sub Topics
      if: always()
      run: |
        gcloud pubsub topics delete --project=${USER_GCP_PROJECT} ${SQL_TAXI_TOPIC}
        gcloud pubsub subscriptions delete --project=${USER_GCP_PROJECT} ${SQL_TAXI_SUBSCRIPTION}
  